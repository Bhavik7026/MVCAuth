<!--Crud Operation on EmplyeeController -->
@{
	ViewData["Title"] = "Index";
}

<br />
<div class="container">
	<h2>Employees</h2>
	
	<button type="button" class="btn btn-primary" onclick="onAddEmployeeClick();">
		Add New Employee
	</button><br /><br />


<div class="form-group">
	<label for="searchName">Search by Name:</label>
	<div class="row">
		<div class="col-4">
			<input type="text" class="form-control" id="searchName" placeholder="Enter name" required>
		</div>
		<div class="col-auto">
			<button type="button" class="btn btn-primary" onclick="searchByName()">Search</button>
			<button type="button" class="btn btn-outline-secondary" onclick="clearSearch()">Clear</button>

		</div>
	</div>
</div>

<div class="row mt-3">
	<div class="col-md-6 offset-md-3">
		<div id="searchMessage" class="text-danger"></div>
	</div>
</div>


	<table class="table table-striped table-bordered dt-responsive">
		<thead>
			<tr>
				<th>ID</th>
				<th>Name</th>
				<th>Salary</th>
				<th>Department</th>
				<th>Action</th>
			</tr>
		</thead>


		<tbody class="tbody">
			<!-- Employee records will be populated here -->

		</tbody>
	</table>
	<!-- Pagination controls -->
	<div class="container">
		<div class="row mt-3">
			<div class="col-md-6 offset-md-3">
				<nav aria-label="Page navigation example">
					<ul class="pagination justify-content-end"></ul>
				</nav>
			</div>
		</div>
	</div>
</div>



 @* Adding model on Add the employee *@
<div class="modal fade" id="addEditEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabelAddEmployee" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title" id="lblAddEmp">Add Employee</h4>
				<button type="button" class="close" onclick="CloseAddEditEmployeeModal()">&times;</button>
			</div>

				<div class="modal-body">
					<form id="employeeForm">
						<input type="hidden" id="Id" name="Id" />
						<div class="form-group">
							<label for="Name">Name</label>
							<input type="text" class="form-control" id="Name" placeholder="Name"  />
							<div id="nameValidationMessage" class="invalid-feedback">
								Name is required.
							</div>
						</div>
						<div class="form-group">
							<label for="Salary">Salary</label>
							<input type="text" class="form-control" id="Salary" placeholder="Salary" />
							<div id="salaryValidationMessage" class="invalid-feedback">
								Salary must contain only numbers.
							</div>
						</div>
						<div class="form-group">
							<label for="Department">Department</label>
							<input type="text" class="form-control" id="Department" placeholder="Department"  />
						<div id="departmentValidationMessage" class="invalid-feedback">
							Department is required.
						</div>
						</div>
					</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" id="btnAddEmployee" onclick="AddEmployee('add')">Add Employee</button>
				<button type="button" class="btn btn-primary" id="btnUpdateEmployee" onclick="UpdateEmployee();">Update Employee</button>
				<button type="button" class="btn btn-danger" onclick="CloseAddEditEmployeeModal()">Close</button>
			</div>
		</div>
	</div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				Are you sure you want to delete the following Employee?
			</div>
			<div class="modal-body">
				<input type="hidden" id="HiddenEmployeeId" name="HiddenEmployeeId" />
				<label id="labelToUpdateName" style="display: block; text-align: center;"></label><br />
				<label id="labelToUpdateDepartment" style="display: block; text-align: center;"></label><br />
				<label id="labelToUpdateSalary" style="display: block; text-align: center;"></label><br />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-danger" id="btnDelete" onclick="return Delete();">Yes</button>
				<button type="button" class="btn btn-secondary" onclick="CloseAddEditEmployeeModal()">Close</button>
			</div>
		</div>
	</div>
</div>
 

@section Scripts
{
	<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
	<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>


	<script>
			toastr.options = {
				"closeButton": true,
				"debug": false,
				"newestOnTop": false,
				"progressBar": true,
				"positionClass": "toast-top-right",
				"preventDuplicates": false,
				"onclick": null,
				"showDuration": "300",	
				"hideDuration": "1000",
				"timeOut": "5000",
				"extendedTimeOut": "1000",
				"showEasing": "swing",
				"hideEasing": "linear",
				"showMethod": "fadeIn",
				"hideMethod": "fadeOut"

			}
		var currentPage = 1;
		var pageSize = 5; // Set your desired page s

		// Load Data in Table when document is ready
		$(document).ready(function () {
			loadData(currentPage, pageSize);
			});
		
		// Load Data function
		function loadData(pageIndex, pageSize) {
			
			$.ajax({
				url: '/Employee/GetAll',
				type: 'GET',
				data: { pageIndex: pageIndex, pageSize: pageSize },

				success: function (result) {
					var html = '';
					$.each(result.data, function (key, item) {
						debugger

						html += '<tr>';
						html += '<td>' + item.id + '</td>';
						html += '<td>' + item.name + '</td>';
						html += '<td>' + item.salary + '</td>';
						html += '<td>' + item.department + '</td>';
						html += '<td> <a href="#" class="btn btn-primary" onclick="return getbyID(' + item.id + ')"> Edit </a> ' +
							'<a href ="#" class="btn btn-danger" onclick ="ConfirmDelete(' + item.id + ')"> Delete </a> ' +
							'</td>';
						html += '</tr>';
					});
					$('.tbody').html(html);

					// Update pagination controls
					updatePaginationControls(result.currentPage, result.pageSize, result.totalCount);

				},
				error: function (errormessage) {
					alert(errormessage.responseText);
				}
			});
		}
		// Update pagination controls
		function updatePaginationControls(pageIndex, pageSize, totalRecords) {
			var totalPages = Math.ceil(totalRecords / pageSize);

			var paginationHtml = '';
			for (var i = 1; i <= totalPages; i++) {
				paginationHtml += `<li class="page-item ${i === pageIndex ? 'active' : ''}">
									<a class="page-link" href="#" onclick="loadData(${i}, ${pageSize})">${i}</a>
								   </li>`;
			}

			$('.pagination').html(paginationHtml);
		}
		function prevPage() {
			if (currentPage > 1) {
				currentPage--;
				loadData(currentPage, pageSize);
			}
		}

		function nextPage() {
			var totalRecords = parseInt($('#totalRecords').val());

			if (currentPage * pageSize < totalRecords) {
				currentPage++;
				loadData(currentPage, pageSize);
			}
		}
		//Search employee using Name
		function searchByName() {
			var searchQuery = $('#searchName').val();

			// Check if the search query is empty
			if (searchQuery.trim() === '') {
				$('#searchMessage').text("Please enter a name to search.");
				return; // Stop further execution of the function
			} else {
				$('#searchMessage').text(""); // Clear any previous message
			}

			$.ajax({
				url: '/Employee/SearchByName',
				type: 'GET',
				data: { name: searchQuery },
				success: function (result) {
					if (result.data.length === 0) {
						$('#searchMessage').text("Please Enter A Valid Name No, Results Found For '" + searchQuery + "'.");
						$('.tbody').html(''); // Clear any previous search results

						// Automatically refresh after 5 seconds
						setTimeout(function () {
							$('#searchMessage').text(""); // Clear message
							$('#searchName').val(""); // Clear search input
							loadData(currentPage, pageSize);
							// Function to load all data again
						}, 5000);
					} else {
						$('#searchMessage').text(""); // Clear any previous message
						var html = '';
						$.each(result.data, function (key, item) {
							html += '<tr>';	
							html += '<td>' + item.id + '</td>';
							html += '<td>' + item.name + '</td>';
							html += '<td>' + item.salary + '</td>';
							html += '<td>' + item.department + '</td>';
							html += '<td> <a href="#" class="btn btn-primary" onclick="return getbyID(' + item.id + ')"> Edit </a> ' +
								'<a href ="#" class="btn btn-danger" onclick ="ConfirmDelete(' + item.id + ')"> Delete </a> ' +
								'</td>';
							html += '</tr>';
						});
						$('.tbody').html(html);
					}
				},
				error: function (errormessage) {
					alert(errormessage.responseText);
				}
			});
		}
		function clearSearch() {
			document.getElementById('searchName').value = '';
			document.getElementById('searchMessage').innerText = ''; // Clear any search messages
			loadData(currentPage, pageSize);
			// Function to load all data again

		}
		// Add Employee Data Function
		function AddEmployee(type) {

			if ($('#employeeForm')[0].checkValidity()) {

			
				// Check each field individually for validity
				var name = $('#Name').val().trim();
				var department = $('#Department').val().trim();
				var salaryValue = $('#Salary').val().trim();

				// Check if the Name field is empty
				if (name === '') {
					$('#Name').addClass("is-invalid");
					$('#nameValidationMessage').text("Name is required.");
				} else {
					$('#Name').removeClass("is-invalid");
					$('#nameValidationMessage').text("");
				}

				// Check if the Department field is empty
				if (department === '') {
					$('#Department').addClass('is-invalid');
					$('#departmentValidationMessage').text("Department is required.");
				} else {
					$('#Department').removeClass('is-invalid');
					$('#departmentValidationMessage').text("");
				}

				// Check if the Salary field is empty or contains non-numeric characters
				if (salaryValue === '' || !/^\d+$/.test(salaryValue)) {
					$('#Salary').addClass("is-invalid");
					$('#salaryValidationMessage').text("Salary must contain only numbers.");
				} else {
					$('#Salary').removeClass("is-invalid");
					$('#salaryValidationMessage').text("");
				}

				// Exit the function if any field is invalid
				if (name === '' || department === '' || salaryValue === '' || !/^\d+$/.test(salaryValue)) {
					return;
				}

				var employee = {
					EmployeeID: $('#Id').val(),
					Name: $('#Name').val(),
					Salary: $('#Salary').val(),
					Department: $('#Department').val()
				};
				$.ajax({
					url: '@Url.Action("AddEmployee", "Employee")',
					type: 'POST',
					contentType: 'application/json',
					data: JSON.stringify(employee),
					success: function (result) {
						loadData(currentPage, pageSize); 
						toastr.success('Employee has been added successfully.');

						$("#addEditEmployeeModal").modal("hide");
					},
					error: function (errormessage) {
						alert(errormessage.responseText);

					}
				});
			} else {
				$('#employeeForm')[0].reportValidity();
			}
		}

		//Close The Model
		function CloseAddEditEmployeeModal() {
			$("#addEditEmployeeModal").modal("hide");
			$("#deleteConfirmationModal").modal("hide");
		}

		// Function for getting the Data Based upon Employee ID
		function getbyID(EmpID) {
			$('#Name').css('border-color', 'lightgrey');
			$('#Salary').css('border-color', 'lightgrey');
			$('#Department').css('border-color', 'lightgrey');
			$.ajax({
				url: "/Employee/GetById/" + EmpID,
				type: "GET",
				contentType: 'application/json',
				success: function (result) {
					$('#Id').val(result.data.id);
					$('#Name').val(result.data.name);
					$('#Salary').val(result.data.salary);
					$('#Department').val(result.data.department);

					$('#addEditEmployeeModal').modal('show');

					var lblElement = document.getElementById("lblAddEmp");
					lblElement.innerText = "Update Employee";

					$('#btnUpdateEmployee').show();
					$('#btnAddEmployee').hide();

				},
				error: function (errormessage) {
					alert(errormessage.responseText);
				}
			});
			return false;
		}

		// Function for updating employee's record
		function UpdateEmployee() {
			var employee = {
				Id: $('#Id').val(),
				Name: $('#Name').val(),
				Salary: $('#Salary').val(),
				Department: $('#Department').val(),	
			};
			$.ajax({
				url: '@Url.Action("UpdateEmployee", "Employee")',
				type: 'POST',
				contentType: 'application/json',
				data: JSON.stringify(employee),
				success: function (result) {
					loadData(currentPage, pageSize);
					$('#addEditEmployeeModal').modal('hide');
					toastr.success('Employee has been Update successfully.');

					$('#id').val("");
					$('#name').val("");
					$('#salary').val("");
					$('#department').val("");

				},
				error: function (errormessage) {
					alert(errormessage.responseText);
				}
			});
		}

		// Function for showing the Popup before deletion
		function ConfirmDelete(EmpID) {
			$.ajax({
				url: "/Employee/GetById/" + EmpID,
				type: "GET",
				contentType: 'application/json',
				success: function (result) {
					$("#labelToUpdateName").html("<b>Name: </b>" + result.data.name);
					$("#labelToUpdateDepartment").html("<b>Department: </b>" + result.data.department);
					$("#labelToUpdateSalary").html("<b>Salary: </b>" + result.data.salary);
					$('#HiddenEmployeeId').val(EmpID);
					$('#deleteConfirmationModal').modal('show');
				},
				error: function (errormessage) {
					toastr.error('Error fetching employee details: ' + errormessage.responseText);
				}
			});
		}

		// Function for deleting the Employee
		function Delete() {
			var ID = $('#HiddenEmployeeId').val();
			$.ajax({
				url: "/Employee/DeleteEmployee/" + ID,
				type: 'POST',
				contentType: 'application/json',
				success: function (result) {

					loadData(currentPage, pageSize);

					$('#deleteConfirmationModal').modal('hide');
					toastr.success('Employee has been Delete successfully.');	

				},
				error: function (errormessage) {
					toastr.error('Error deleting employee: ' + errormessage.responseText);
				}
			});
		}

		// Function for clearing the textboxes
		function clearTextBox() {
			$('#Id').val("");
			$('#Name').val("");
			$('#Salary').val("");
			$('#Department').val("");
			$('#btnUpdateEmployee').hide();
			$('#btnAdd').show();
			$('#Name').css('border-color', 'lightgrey');
			$('#Salary').css('border-color', 'lightgrey');
			$('#Department').css('border-color', 'lightgrey');
		}

		//Addlebel on Addemployee model
		function onAddEmployeeClick() {
			clearTextBox();
			$("#addEditEmployeeModal").modal("show");

			$('#btnAddEmployee').show();
			$('#btnUpdateEmployee').hide();

			var lblElement = document.getElementById("lblAddEmp");
			lblElement.innerText = "Add Employee";
			
		}

	</script>

}
